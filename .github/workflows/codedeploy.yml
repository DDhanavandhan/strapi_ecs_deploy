name: CD - Blue/Green Deploy via CodeDeploy

on:
  workflow_dispatch:
    inputs:
      ecr_image_url:
        description: 'Full ECR image URL (e.g. 626635402783.dkr.ecr.us-east-1.amazonaws.com/strapi-app:latest)'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: strapi-cluster
  SERVICE_NAME: strapi-service
  TASK_FAMILY: strapi-task
  DEPLOYMENT_GROUP: strapi-deploy-group
  CODEDEPLOY_APP: strapi-codedeploy-app

jobs:
  deploy:
    name: Register Task Definition & Trigger CodeDeploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch and sanitize current task definition
        id: get-task-def
        run: |
          aws ecs describe-task-definition --task-definition $TASK_FAMILY \
          | jq '{
              family,
              executionRoleArn,
              networkMode,
              containerDefinitions,
              requiresCompatibilities,
              cpu,
              memory
            }' > task-def.json

      - name: Update image in task definition
        id: task-def
        run: |
          IMAGE="${{ github.event.inputs.ecr_image_url }}"
          jq --arg IMAGE "$IMAGE" '.containerDefinitions[0].image = $IMAGE' task-def.json > new-task-def.json

      - name: Register new task definition
        id: register-task
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV
          echo "New Task Definition: $TASK_DEF_ARN"

      - name: Trigger CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name $CODEDEPLOY_APP \
            --deployment-group-name $DEPLOYMENT_GROUP \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --description "Strapi Blue/Green Deployment" \
            --target-objects "taskDefinition=$TASK_DEF_ARN" \
            --file-exists-behavior OVERWRITE
