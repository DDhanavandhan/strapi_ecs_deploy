name: CD - Infrastructure and Deployment

on:
  workflow_dispatch:
    inputs:
      ecr_image:
        description: 'ECR Image URI (e.g. 123456789012.dkr.ecr.us-east-1.amazonaws.com/strapi-app:sha-123)'
        required: true

jobs:
  deploy:
    name: Deploy to ECS using Terraform
    runs-on: ubuntu-latest
    
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init 
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="ecr_image=${{ github.event.inputs.ecr_image }}"
        working-directory: ./terraform
        
      - name: Get ECS Task Definition ARN
        id: get_task_def
        run: |
            TASK_ARN=$(aws ecs list-task-definitions \
              --family-prefix strapi-task \
              --sort DESC \
              --max-items 1 \
              --query 'taskDefinitionArns[0]' \
              --output text)
            echo "taskDefinitionArn=$TASK_ARN" >> "$GITHUB_OUTPUT"
        
      - name: Trigger CodeDeploy Deployment
        run: |
            aws deploy create-deployment \
              --application-name strapi-codedeploy-app \
              --deployment-group-name strapi-deploy-group \
              --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
              --revision "revisionType=AppSpecContent,appSpecContent={\"version\":\"1.0\",\"Resources\":[{\"TargetService\":{\"Type\":\"AWS::ECS::Service\",\"Properties\":{\"TaskDefinition\":\"${{ steps.get_task_def.outputs.taskDefinitionArn }}\",\"LoadBalancerInfo\":{\"ContainerName\":\"strapi\",\"ContainerPort\":1337}}}}]}"